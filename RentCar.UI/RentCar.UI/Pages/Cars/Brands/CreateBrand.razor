@page "/create_brand"

@using RentCar.UI.Data.Cars.Brands.Models;
@using RentCar.UI.Data.Cars.Brands.Services;

@inject BrandService BrandService
@inject NavigationManager NavigationManager

<h1>Create a Brand!</h1>

<EditForm Model="@brand" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">

        <div class="form-group">
            <label for="brand-description">Description</label>
            <InputText id="brand-description" class="form-control" @bind-Value="brand.Description" />
        </div>

        <div class="form-group">
            <label for="brand-status">Status</label>
            <InputSelect @bind-Value="brand.Status" id="brand-status" class="form-control valid">
                <option>Select</option>
                @foreach (var status in Enum.GetValues(typeof(BrandStatus)))
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>

    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private Brand brand = new Brand();

    private async Task HandleValidSubmit()
    {
        try
        {
            await BrandService.Create(brand);
            NavigationManager.NavigateTo("brands");

        }catch(Exception e)
        {
            //Redirectionate to error page
            //NavigationManager.NavigateTo("error");
        }
    }
}
