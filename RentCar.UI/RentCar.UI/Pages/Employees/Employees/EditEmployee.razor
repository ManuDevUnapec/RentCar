@page "/edit_employee/{id:int}"

@using RentCar.UI.Data.Employees.Employees.Models;
@using RentCar.UI.Data.Employees.Employees.Services;

@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager

<h1>Employees !</h1>
<strong style="display: inline;">Edit:</strong> <p style="display: inline;">@employee.Name</p>

<hr />

<EditForm Model="@employee" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">

        <div class="form-group">
            <label for="employee-name">Name</label>
            <InputText id="employee-name" class="form-control" @bind-Value="employee.Name" />
        </div>

        <div class="form-group">
            <label for="employee-id-card">Identification Card</label>
            <InputText id="employee-id-card" class="form-control" @bind-Value="employee.IdentificationCard" />
        </div>

        <div class="form-group">
            <label for="employee-commision">Commision Percent</label>
            <InputText id="employee-commision" class="form-control" @bind-Value="employee.CommisionPercent" />
        </div>

        <div class="form-group">
            <label for="employee-hour-hand">Hour Hand</label>
            <InputSelect @bind-Value="employee.HourHand" id="employee-hour-hand" class="form-control valid">
                <option>Select</option>
                @foreach (var hourHand in Enum.GetValues(typeof(EmployeeHourHand)))
                {
                    <option value="@hourHand">@hourHand</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label for="employee-status">Status</label>
            <InputSelect @bind-Value="employee.Status" id="employee-status" class="form-control valid">
                <option>Select</option>
                @foreach (var status in Enum.GetValues(typeof(EmployeeStatus)))
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>

    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>


@code {
    [Parameter]
    public int ID { get; set; }

    private Employee employee = new Employee();

    protected override async Task OnInitializedAsync()
    {
        employee = await EmployeeService.GetByID(ID);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await EmployeeService.Put(employee);
            NavigationManager.NavigateTo("/employees");

        }
        catch (Exception e)
        {
            //Redirectionate to error page
            //NavigationManager.NavigateTo("error");
        }
    }
}