@page "/edit_employee/{id:int}"

@using RentCar.UI.Data.Employees.Employees.Models;
@using RentCar.UI.Data.Employees.Employees.Services;

@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager

<h1>Employees !</h1>
<strong style="display: inline;">Edit:</strong> <p style="display: inline;">@employee.Name</p>

<hr />

@if (requesting)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" style="width: 12rem; height: 12rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <EditForm Model="@employee" OnValidSubmit="@HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary />

        @if (requestFailed)
        {
            <strong style="color: red;">@errorMessage</strong>
        }

        <div class="form-group">

            <div class="form-group">
                <label for="employee-name">Name</label>
                <InputText id="employee-name" class="form-control" @bind-Value="employee.Name" />
            </div>

            <div class="form-group">
                <label for="employee-id-card">Identification Card</label>
                <InputText id="employee-id-card" class="form-control" @bind-Value="employee.IdentificationCard" />
            </div>

            <div class="form-group">
                <label for="employee-commision">Commision Percent</label>
                <InputText id="employee-commision" class="form-control" @bind-Value="employee.CommisionPercent" />
            </div>

            <div class="form-group">
                <label for="employee-hour-hand">Hour Hand</label>
                <InputSelect @bind-Value="employee.HourHand" id="employee-hour-hand" class="form-control valid">
                    <option>Select</option>
                    @foreach (var hourHand in Enum.GetValues(typeof(EmployeeHourHand)))
                        {
                        <option value="@hourHand">@hourHand</option>
                        }
                </InputSelect>
            </div>

            <div class="form-group">
                <label for="employee-status">Status</label>
                <InputSelect @bind-Value="employee.Status" id="employee-status" class="form-control valid">
                    <option>Select</option>
                    @foreach (var status in Enum.GetValues(typeof(EmployeeStatus)))
                        {
                        <option value="@status">@status</option>
                        }
                </InputSelect>
            </div>

        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public int ID { get; set; }

    private Employee employee = new Employee();
    private bool requesting;
    private bool requestFailed;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        employee = await EmployeeService.GetByID(ID);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            requesting = true;
            await EmployeeService.Put(employee);
            requesting = false;
            NavigationManager.NavigateTo("/employees");

        }
        catch (Exception e)
        {
            requestFailed = true;
            requesting = false;
            errorMessage = e.Message;
        }
    }
}